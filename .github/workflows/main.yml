name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master
      - develop

jobs:
  linux-e2e:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Install PostgreSQL
        run: |
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo apt-get update
          sudo apt-get install postgresql-16
        shell: bash

      - name: Publish and prepare docker environment
        run: |
          dotnet build
          dotnet publish ./src/GbUtil/GbUtil.csproj -c Release -o executable --runtime linux-x64 --self-contained true -p:PublishSingleFile=false
          docker compose up -d

          # Wait for the containers to be ready
          timeout 150s bash -c '
            until docker compose logs | grep -q "oejs.Server:main: Started"; do
              echo "Waiting for '\''oejs.Server:main: Started'\'' in the logs..."
              sleep 3
            done
            echo "Found '\''oejs.Server:main: Started'\'' in the logs."
          '

      - name: Run E2E Tests Using SingleFileExe On Linux
        env:
          GbUtil_UseSingleFileExe: true
          GbUtil_SingleFileExePath: ./executable/GbUtil
        run: |
          echo GbUtil_SingleFileExePath is ${{ env.GbUtil_SingleFileExePath }}
          dotnet test ./src/GbUtil.E2ETests/GbUtil.E2ETests.csproj

  linux-e2e-scd:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Install PostgreSQL
        run: |
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo apt-get update
          sudo apt-get install postgresql-16
        shell: bash

      - name: Publish single file exe and prepare docker environment
        run: |
          dotnet build
          dotnet publish ./src/GbUtil/GbUtil.csproj -c Release -o executable --runtime linux-x64 --self-contained true -p:PublishSingleFile=true
          docker compose up -d

          # Wait for the containers to be ready
          timeout 150s bash -c '
            until docker compose logs | grep -q "oejs.Server:main: Started"; do
              echo "Waiting for '\''oejs.Server:main: Started'\'' in the logs..."
              sleep 3
            done
            echo "Found '\''oejs.Server:main: Started'\'' in the logs."
          '

      - name: Run E2E Tests Using SingleFileExe On Linux
        env:
          GbUtil_UseSingleFileExe: true
          GbUtil_SingleFileExePath: ./executable/GbUtil
        run: |
          echo GbUtil_SingleFileExePath is ${{ env.GbUtil_SingleFileExePath }}
          dotnet test ./src/GbUtil.E2ETests/GbUtil.E2ETests.csproj

  windows:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Build and Run Unit Tests On Windows
        run: |
          dotnet test ./src/GitBucket.Service.Tests/GitBucket.Service.Tests.csproj

  macOS:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Build and Run Unit Tests On macOS
        run: |
          dotnet test ./src/GitBucket.Service.Tests/GitBucket.Service.Tests.csproj
